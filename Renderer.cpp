#pragma once
#include "Renderer.hpp"

Renderer renderer;

Renderer::Renderer() {

}

Renderer::~Renderer() {

}

void Renderer::DisplaySprite(Sprite _sprite) {

	switch (_sprite) {
        case Sprite::NONE:
        {
            std::cout << R"(

            .-.
            |-|
          .-' '-.
         /_______\
        |         |
         \       /
          '-----'

)";
        } break;

        // EQUIPMENT:
        case Sprite::OH_SWORD:
        {
            std::cout << R"(
             .
            / \
            | |
            | |
            |.|
            |||
          __|||__
         '--. .--'
            ] [
            (_)

)";
        } break;

        case Sprite::OH_AXE:
        {
            std::cout << R"( 

             .-.
         .---+=+---''//
          '''+=+-.  //
             [ ]  \//
             | |   '
             | |
             | |
             [']
             ) (
             ) (
             [_]

)";
        } break;


        // ITEMS:
        case Sprite::TORCH:
        {
            std::cout << R"(

            '(.
           (._)\'
           ')  (,
            \{}/
             []  You found a Torch.
             ||  ...
             ||  
             ||  Even in the darkest places,
             ||  you can find a spark of hope.
             []

)";
        } break;

        // MONSTERS
        case Sprite::GHOUL:
        {
            std::cout << R"(
     
          /////\\\
         |/'/   '\|
         |<Ò>..<Ó>|
         | /++++\ |
          \\++++//
           ''''''

)";
        } break;

        case Sprite::SKULL:
        {
            std::cout << R"(
       
          /''''''\
         |        |
         |<o>..<o>|
         \'\++++/'/
          \'++++'/
           ''''''
       
)";

        } break;

        case Sprite::SPIDER:
        {
            std::cout << R"(
            .  .
         . / __ \ .
          \\(||)//
         /'.(..).'\
        '  \ "" /  '
           '    '
)";

        } break;

        // SYMBOLS

        case Sprite::TITLE:
        {
            std::cout << R"(
                                   ____     __
                                   \\  '--'_||_'--.
     \\''||'''''//          //'    \\   -===[]==- |
         ||        ||'\\'\\ ||'\\  \\    .--::-.  /
         ||  //'\\ || || || || ((   \\  (   ||  )/
         ||  )) (( || || || ||.//    \\ /   ||  '
         ||  \\.// |/ '               \/    ||
         ||          //'  ||  //'           ||
         \\.  //'\\ '||'  ||' ||'\\ //'\\   ||
              )) ((  ||   ||  || (( ))//'   ||
     //''''\\ \\.//  ||   \\  || // \\.//   []
     ||     '                               ][
     ||    \\ '' //''\\ ||''\\ ||  //''\\   ][
     ||    || || '   || ||  || ||' ||   '   ][
     ||    || || //''|| ||  || ||  \\--\\   ][
     ||    || || ||  || ||  || ||  .   ||   ][
     \\....// \\ \\..\\ ||  || \\. \\..//   []

)";
        } break;

        // ICONS
        case Sprite::ICON_TARGET:
        {
            std::cout << R"(
            v
          >   <
            ^
)";
        } break;

        case Sprite::DEATH:
        {
            std::cout << R"(

    _____+_
  +-'''''|  __
         | /'\\
         |'-=-'.
        /'\  . \
        \ /   \ \
         ||    \  \
         ||     '-'
         ||       |
         |\       /
           '''---'

)";
        } break;
	}
}

        //    std::cout << R"(
        //  .--------.
        // /          \
        //|\          /|
        //|/____\/____\|
        ///(___/  \___)\
        //\__   ||   __/
        // | '++++++' |
        //  \'++++++'/
        //   '-____-'
        //              )";

         //   std::cout << R"(
         //   .    .
         //. /      \ .
         //| | /""\ | |
         //\ \(    )/ /
         // \_\\__//_/
         // / //  \\ \
         //| | \::/ | |
         //' \  ""  / '
         //   '    '
         //            )";

        // std::cout << R"(
        //   /\
        //  |  |
        //  |  |
        //  |  |
        //  |  |
        //  |  |
        //  |  |
        //  |/\|
        //  ))((
        //  \\//
        //[//[]//]
        //   ||
        //   ||
        //   []
        //        )";

         //   std::cout << R"( 
         //     []     ____
         //.--'_||_'--'  //
         //| -==[]===-   //
         //\  .-||--.    //
         // \(  ||   )  //
         //  '  ||   \ //
         //     ||    \/
         //     ||
         //     ||
         //     []
         //     ][
         //     ][
         //     ][
         //     []
         //                )";